@page
@model HairSalon.RazorPage.Pages.Appointment.MarkCompletedModel
@{
	ViewData["Title"] = "Mark Appointment Completed";
}

<style>
	body {
		font-family: Arial, sans-serif;
		background-color: #f5f5f5;
		color: #333;
		margin: 0;
		padding: 20px;
	}

	h2 {
		color: #d9534f;
		border-bottom: 2px solid #d9534f;
		padding-bottom: 10px;
		margin-bottom: 20px;
	}

	.details-container {
		background-color: #fff;
		padding: 20px;
		border-radius: 8px;
		box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);
		max-width: 500px;
		margin: 0 auto 20px;
	}

		.details-container p {
			font-size: 16px;
			line-height: 1.6;
		}

			.details-container p strong {
				color: #3f51b5;
			}

	p.confirmation-text {
		font-size: 1.1em;
		color: #555;
		margin-bottom: 20px;
		text-align: center;
	}

	form {
		display: flex;
		flex-direction: column;
		align-items: center;
		gap: 20px;
	}

	button[type="submit"],
	a {
		padding: 10px 20px;
		border-radius: 4px;
		color: #ffffff;
		text-decoration: none;
		font-size: 16px;
		transition: background-color 0.3s ease;
		width: 100%;
		max-width: 200px;
		text-align: center;
	}

	button[type="submit"] {
		background-color: #d9534f;
		border: none;
	}

		button[type="submit"]:hover {
			background-color: #c9302c;
		}

	.btn-cancel {
		background-color: #5bc0de;
	}

		.btn-cancel:hover {
			background-color: #31b0d5;
		}

	.alert {
		padding: 10px 15px;
		border-radius: 5px;
		margin: 10px 0;
		text-align: center;
	}

	.alert-info {
		background-color: #d9edf7;
		color: #31708f;
		border: 1px solid #bce8f1;
	}

	.alert-danger {
		background-color: #f2dede;
		color: #a94442;
		border: 1px solid #ebccd1;
	}
</style>

@if (TempData["ErrorMessage"] != null)
{
	<div class="alert alert-danger">@TempData["ErrorMessage"]</div>
}
else
{
	<h2>@ViewData["Title"]</h2>

	<div class="details-container">
		<p><strong>User Name:</strong> @Model.Appointment.UserName</p>
		<p>
			<strong>Stylist Name:</strong>
			@{
				var stylist = Model.Stylists.FirstOrDefault(s => s.Id == Model.Appointment.StylistId);
				if (stylist != null)
				{
					@stylist.UserName
				}
				else
				{
					<span style="color: red;">Stylist not found</span>
				}
			}
		</p>
		<p><strong>Status:</strong> @Model.Appointment.StatusForAppointment</p>
		<p><strong>Points Earned:</strong> @Model.Appointment.PointsEarned</p>
		<p><strong>Total Time:</strong> @Model.Appointment.TotalTime minutes</p>
		<p><strong>Total Amount:</strong> @Model.Appointment.TotalAmount</p>
		<p><strong>Appointment Date:</strong> @Model.Appointment.AppointmentDate.ToString("MM/dd/yyyy hh:mm tt")</p>
		<p>
			<strong>Promotion ID:</strong>
			@if (!string.IsNullOrEmpty(Model.Appointment.PromotionId))
			{
				@Model.Appointment.PromotionId
			}
			else
			{
				<span style="color: red;">No promotion to choose</span>
			}
		</p>
	</div>

	<p class="confirmation-text">Are you sure you want to mark this appointment as completed?</p>

	<form method="post" asp-route-id="@Model.Id">
		<button type="submit">Completed</button>
		<a asp-page="/Appointment/Index" class="btn-cancel">Cancel</a>
	</form>

	@if (TempData["ResponseMessage"] != null)
	{
		<div class="alert alert-info mt-3 text-center">@TempData["ResponseMessage"]</div>
	}
}
