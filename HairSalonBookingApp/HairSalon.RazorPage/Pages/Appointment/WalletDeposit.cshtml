@page
@model HairSalon.RazorPage.Pages.Appointment.WalletDepositModel
@{
	ViewData["Title"] = "Wallet Deposit";
    var userId = HttpContext.Session.GetString("UserId");
}

<style>
	/* General Page Styling */
	body {
		font-family: Arial, sans-serif;
		background-color: #f5f5f5;
		color: #333;
		margin: 0;
		padding: 20px;
	}

	h2 {
		color: #3f51b5;
		border-bottom: 2px solid #3f51b5;
		padding-bottom: 10px;
		margin-bottom: 20px;
	}

	/* Details Container Styling */
	.details-container {
		background-color: #fff;
		padding: 20px;
		border-radius: 8px;
		box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);
		max-width: 620px;
		margin: 0 auto 20px;
	}

		.details-container p {
			font-size: 16px;
			line-height: 1.6;
		}

			.details-container p strong {
				color: #3f51b5;
			}

			.details-container p .appointment-id {
				color: red; /* Red color for the appointment ID */
				font-weight: bold;
			}
	/* Table Styling */
	table {
		width: 100%;
		border-collapse: separate;
		border-spacing: 0;
		margin-top: 10px;
	}

	th, td {
		padding: 8px;
		text-align: left;
		border-bottom: 1px solid #ddd;
	}

	th {
		background-color: #f1f1f1;
		font-weight: bold;
	}

	/* Button Styling */
	.btn-container {
		display: flex;
		gap: 10px;
		justify-content: center;
	}

	.btn {
		padding: 10px 20px;
		color: #ffffff;
		background-color: #3f51b5;
		border-radius: 4px;
		text-decoration: none;
		font-size: 14px;
		transition: background-color 0.3s ease;
		display: inline-block;
		text-align: center;
	}

		.btn:hover {
			background-color: #2c3e91;
		}

	form-center {
		text-align: center;
		margin-top: 20px;
	}
</style>

<h2>@ViewData["Title"]</h2>

@if (!string.IsNullOrEmpty(Model.ErrorMessage))
{
    <div class="alert alert-danger">@Model.ErrorMessage</div>
}
else
{
    <div id="countdown-container" style="text-align: center; margin-top: 20px;">
        <p><strong>Time remaining to confirm:</strong> <span id="countdown-timer"></span></p>
    </div>

    <div class="details-container">
        <p><strong>Deposit Amount:</strong> @Model.Amount VND</p>
		<p>
			<strong>Information:</strong> Deposit for Appointment
			<span class="appointment-id">#@Model.AppointmentId</span>
		</p>
        <p><strong>Type:</strong> @Model.Type</p>
    </div>

	<form method="post" class="form-center">
        <button type="submit" class="btn btn-primary">Proceed to Payment</button>
    </form>
}

<script>
	let countdownTime = @Model.CountdownTimeInSeconds;
	const appointmentId = "@Model.AppointmentId";
	const userId = "@userId";

	function updateCountdown() {
		const timerElement = document.getElementById("countdown-timer");
		let minutes = Math.floor(countdownTime / 60);
		let seconds = countdownTime % 60;

		timerElement.textContent = `${minutes.toString().padStart(2, "0")}:${seconds.toString().padStart(2, "0")}`;

		if (countdownTime <= 0) {
			clearInterval(timerInterval);
			window.location.href = `/Appointment/AutoCancel?id=${appointmentId}&userId=${userId}`;
		} else {
			countdownTime--;
		}
	}

	const timerInterval = setInterval(updateCountdown, 1000);
	updateCountdown();
</script>